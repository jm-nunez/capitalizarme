import { ButtonProps } from '../utils/htmlProps';
import { ReactElement } from 'react';
import { SubmitConfig } from './$Submitter';
import { Form } from './Form';
import { setForm } from './Field';
interface ISubmitter<T> {
    readonly config: SubmitConfig<T>;
    readonly buttonProps: ButtonProps;
    render(): ReactElement;
    submit(form: Form<T>): Promise<void>;
}
export declare class Submitter<T> implements ISubmitter<T> {
    readonly config: SubmitConfig<T>;
    constructor(config: SubmitConfig<T>);
    private _form;
    get form(): Form<T>;
    [setForm](form: Form<T>): void;
    private _buttonProps?;
    get buttonProps(): ButtonProps;
    private computeButtonProps;
    render(): ReactElement;
    submit(form: Form<T>): Promise<void>;
    private readonly onValid;
    private onInvalid;
    private static defaultOnInvalid;
    private onError;
    private static defaultOnError;
}
export {};
