import { PropsWithChildren, ReactElement } from 'react';
import { Field } from './Field';
export interface Theme {
    readonly Field: ThemeComponent;
    readonly FieldContainer: ThemeComponentWithChildren;
    readonly Label: ThemeComponent;
    readonly Optional: ThemeComponent;
    readonly Input: ThemeComponent;
    readonly Message: ThemeComponent;
    readonly Error: ThemeComponentWithChildren;
}
declare type ThemeComponent = <S, T>(props: ThemeProps<S, T>) => ReactElement | null;
declare type ThemeComponentWithChildren = <S, T>(props: PropsWithChildren<ThemeProps<S, T>>) => ReactElement | null;
declare type ThemeProps<S, T> = {
    field: Field<S, T>;
    className?: string;
};
export declare const defaultTheme: Theme;
export declare function injectClassNames(theme: Theme, injectedClassNames: Partial<Record<keyof Theme, string>>): Theme;
export {};
